# Program G2: AI Agents for Cybersecurity

## Objectives 
Our goal is to teach students how to build and deploy AI agents for cybersecurity applications, combining LLM capabilities with security tools. Here's what we'll focus on:
1. Understanding how to use LLMs for security analysis
2. Building AI agents that can assist in security tasks
3. Implementing secure and robust AI systems
4. Participating in AI-assisted CTF challenges

---

## 1. Background & Program Overview

**Program Overview**  
- **Total Lessons:** 24  
- **Session Duration:** 1 hour per session  
- **Meeting Frequency:** Weekly check-ins with mentors via Zoom  
- **Program Duration:** Approximately 6 months  
- **Class Size:** One teacher per eight students (1:8 ratio)  

**Program Structure**  
Program G2 combines theoretical understanding with hands-on practice using various LLM APIs. Students will learn through interactive notebooks, real-world projects, and practical implementations using platforms like Google AI Studio and Gradio.

---

## Detailed Lessons

### Module 1: Foundations of AI Security (Lessons 1-4)

#### Lesson 1: AI in Cybersecurity
- **Objectives:** Understand intersection of AI and security
- **Activities:** Overview of AI security applications
- **Mini-Project:** Analyze security logs using OpenAI's API

#### Lesson 2: Security Tools and AI Integration
- **Objectives:** Learn to combine AI with security tools
- **Activities:** Set up basic security toolkit with AI assistance
- **Mini-Project:** Build an AI-powered log analyzer

#### Lesson 3: LLM Security Fundamentals
- **Objectives:** Understand LLM security considerations
- **Activities:** Practice secure prompt design
- **Mini-Project:** Create a secure chatbot with content filtering

#### Lesson 4: CTF Basics with AI
- **Objectives:** Learn CTF fundamentals with AI assistance
- **Activities:** Solve basic CTF challenges using AI tools
- **Mini-Project:** Build an AI agent for basic CTF challenges

### Module 2: AI-Assisted Security Analysis (Lessons 5-8)

#### Lesson 5: Code Analysis with LLMs
- **Objectives:** Use AI for code security review
- **Activities:** Analyze vulnerable code samples
- **Mini-Project:** Build a code security checker

#### Lesson 6: Network Traffic Analysis
- **Objectives:** AI-powered network analysis
- **Activities:** Analyze pcap files with AI assistance
- **Mini-Project:** Create a network anomaly detector

#### Lesson 7: Malware Analysis with AI
- **Objectives:** Use AI for basic malware detection
- **Activities:** Analyze malware samples with AI
- **Mini-Project:** Build a malware classification agent

#### Lesson 8: Web Security Testing
- **Objectives:** AI-assisted web security testing
- **Activities:** Test web applications with AI tools
- **Mini-Project:** Create an automated web security scanner

### Module 3: Building AI Applications (Lessons 9-12)

#### Lesson 9: Text Generation Applications
- **Objectives:** Build text generation systems
- **Activities:** Implement various text generation use cases
- **Mini-Project:** Create a story generation application

#### Lesson 10: Conversational Agents
- **Objectives:** Design effective chatbots
- **Activities:** Implement conversation management
- **Mini-Project:** Build a customer service chatbot

#### Lesson 11: Code Generation and Analysis
- **Objectives:** Use LLMs for code-related tasks
- **Activities:** Implement code generation and review
- **Mini-Project:** Build a code explanation system

#### Lesson 12: Document Analysis and QA
- **Objectives:** Build document analysis systems
- **Activities:** Implement document QA
- **Mini-Project:** Create a PDF analysis tool

### Module 4: Advanced Agent Capabilities (Lessons 13-16)

#### Lesson 13: Function Calling and Tool Use
- **Objectives:** Implement function calling with LLMs
- **Activities:** Create tools for agents to use
- **Mini-Project:** Build a weather-aware assistant

#### Lesson 14: Multi-Agent Systems
- **Objectives:** Design systems with multiple agents
- **Activities:** Implement agent collaboration
- **Mini-Project:** Create a debate system with multiple agents

#### Lesson 15: Memory and State Management
- **Objectives:** Implement agent memory systems
- **Activities:** Design different memory architectures
- **Mini-Project:** Build a personal assistant with memory

#### Lesson 16: Error Handling and Safety
- **Objectives:** Implement robust error handling
- **Activities:** Practice safety measures
- **Mini-Project:** Build a content moderation system

### Module 5: Evaluation and Optimization (Lessons 17-20)

#### Lesson 17: Agent Evaluation Methods
- **Objectives:** Learn evaluation techniques
- **Activities:** Implement evaluation metrics
- **Mini-Project:** Create an agent evaluation framework

#### Lesson 18: Cost Optimization
- **Objectives:** Optimize API usage and costs
- **Activities:** Implement caching and optimization
- **Mini-Project:** Build a cost-efficient system

#### Lesson 19: Performance Monitoring
- **Objectives:** Implement monitoring systems
- **Activities:** Create monitoring dashboards
- **Mini-Project:** Build a performance tracking system

#### Lesson 20: A/B Testing Agents
- **Objectives:** Learn A/B testing for agents
- **Activities:** Design and run A/B tests
- **Mini-Project:** Compare different agent designs

### Module 6: Deployment and Final Project (Lessons 21-24)

#### Lesson 21: Deployment Strategies
- **Objectives:** Learn deployment options
- **Activities:** Practice deployment methods
- **Mini-Project:** Deploy an agent to production

#### Lesson 22: Final Project Planning
- **Objectives:** Plan comprehensive agent system
- **Activities:** Project planning and design
- **Mini-Project:** Create project proposal

#### Lesson 23: Final Project Development
- **Objectives:** Build final project
- **Activities:** Implementation and testing
- **Mini-Project:** Complete project implementation

#### Lesson 24: Final Project Presentation
- **Objectives:** Present and evaluate projects
- **Activities:** Project demonstrations
- **Mini-Project:** Final presentation and documentation

---

## Tools and Platforms Used
- **Security Platforms:**
  - Google CTF Platform
  - PicoCTF
  - HackTheBox
  - VulnHub
- **AI Tools:**
  - OpenAI API
  - Claude API
  - Security-focused LLMs
- **Development Tools:**
  - Kali Linux
  - Security testing frameworks
  - AI development environments

---

## Learning Outcomes
By the end of this program, students will be able to:
1. Build AI agents for security analysis
2. Understand AI security implications
3. Solve CTF challenges with AI assistance
4. Create secure AI applications
5. Combine traditional security tools with AI capabilities
